server.port: 8084

management:
  endpoints:
    web.exposure.include: "*"
    jmx.exposure.include: "*"

logging:
  level:
    root: info
    com.example: debug

kafka:
  bootstrap.servers: localhost:9092
  schema.registry.url: http://localhost:8081

dlt-producer:
  properties:
    bootstrap.servers: ${kafka.bootstrap.servers}
    schema.registry.url: ${kafka.schema.registry.url}
    key.serializer: org.apache.kafka.common.serialization.ByteArraySerializer
    value.serializer: org.apache.kafka.common.serialization.ByteArraySerializer

event-consumer:
  topics:
    simple-one: simple-one
    simple-two: simple-two
    logical-one: logical-one
    logical-two: logical-two
    multi-simple: multi-simple
    multi-logical: multi-logical
  properties:
    group.id: event-group-1
    bootstrap.servers: ${kafka.bootstrap.servers}
    schema.registry.url: ${kafka.schema.registry.url}
    key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
    avro.use.logical.type.converters: true
    auto.register.schemas: false
    use.latest.version: true

reflected-event-consumer:
  topics:
    reflected-one: reflected-one
    reflected-two: reflected-two
  properties:
    group.id: reflected-group-1
    bootstrap.servers: ${kafka.bootstrap.servers}
    schema.registry.url: ${kafka.schema.registry.url}
    key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    spring.deserializer.value.delegate.class: io.confluent.kafka.streams.serdes.avro.ReflectionAvroDeserializer
    avro.reflection.allow.null: true
    auto.offset.reset: latest